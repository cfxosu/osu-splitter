<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
	<TargetFrameworks>net48;net8.0-windows</TargetFrameworks>
	<Platforms>x86;x64;AnyCPU</Platforms>
	<OutputType>WinExe</OutputType>
    <UseWindowsForms>true</UseWindowsForms>
	<LangVersion>latest</LangVersion>
    <AssemblyName>osu-splitter</AssemblyName>
  </PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
		<OutputPath>bin\x86\Debug\</OutputPath>
		<CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
	  <OutputPath>bin\AnyCPU\Debug\</OutputPath>
	  <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
	  <OutputPath>bin\x64\Debug\</OutputPath>
	  <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
		<OutputPath>bin\x64\Release\</OutputPath>
		<CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
	  <OutputPath>bin\AnyCPU\Release\</OutputPath>
	  <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
	  <OutputPath>bin\x64\Release\</OutputPath>
	  <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netcoreapp3.1|x86'">
	  <PlatformTarget>x86</PlatformTarget>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netcoreapp3.1|AnyCPU'">
	  <PlatformTarget>x86</PlatformTarget>
	</PropertyGroup>
  <ItemGroup>
	  <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
	  <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
	  <PackageReference Include="System.Data.DataSetExtensions" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\OsuMemoryDataProvider\OsuMemoryDataProvider.csproj" />
  </ItemGroup>

	<ItemGroup>
		<Content Include="..\assets\logo.png">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

		<ItemGroup>
			<!-- Copy entire assets folder (fonts) so published EXE can draw overlay text -->
			<Content Include="..\assets\**\*">
				<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
				<Link>assets\%(RecursiveDir)%(Filename)%(Extension)</Link>
			</Content>
		</ItemGroup>

	<!-- Generate ICO from logo.png before build and embed as application icon -->
	<PropertyGroup>
		<!-- ApplicationIcon points to the generated ICO in repository assets folder -->
		<ApplicationIcon>..\assets\logo.ico</ApplicationIcon>
	</PropertyGroup>

	<Target Name="GenerateIco" BeforeTargets="BeforeBuild">
		<!-- Run the MakeIco tool to produce assets\logo.ico -->
		<Exec Command="dotnet run --project $(MSBuildThisFileDirectory)..\tools\MakeIco\MakeIco.csproj --framework net8.0-windows" WorkingDirectory="$(MSBuildThisFileDirectory)" />
		<!-- Add generated icon as content so it is available during publish -->
		<ItemGroup>
			<Content Include="..\assets\logo.ico">
				<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			</Content>
		</ItemGroup>
	</Target>

</Project>
